syntax = "proto3";

import "access_check/access_check.proto";
import "plugin/escalated_privilege.proto";
import "plugin/argument.proto";
import "plugin/command.proto";

package hank.plugin;

// Metadata for a plugin.
message Metadata {
  // The plguins name.
  string name = 1;
  // A short description of the plugin.
  string description = 2;
  // A version string for the plugin. Should follow semver.
  //
  // @see: https://semver.org/
  string version = 3;
  // When true, a SQLite3 database will be created for the plugin.
  // @deprecated All plugins get a database by default now.
  bool database = 4;
  // Access checks
  //
  // All functionality of this plugin can optionally be gated by accses checks.
  optional hank.access_check.AccessCheckChain access_checks = 5;
  // A secret escalation key that grants this plugin specific escalated
  // privileges.
  optional string escalation_key = 6;
  // A list of escalated privileges that this plugin requests to use.
  repeated hank.plugin.EscalatedPrivilege escalated_privileges = 7;
  // The author of the plugin.
  string author = 8;
  // Whether or not this plugin handles commands.
  bool handles_commands = 9;
  // Whether or not this plugin handles messages.
  bool handles_messages = 10;
  // Optionally override the plugin command name.
  optional string command_name = 11;
  // Optional aliases for the plugin command.
  repeated string aliases = 12;
  // Arguments for the plugin command.
  repeated hank.plugin.Argument arguments = 13;
  // Plugin subcommands.
  repeated hank.plugin.Command subcommands = 14;
  // Hosts that this plugin requests permissions to access via HTTP.
  repeated string allowed_hosts = 15;
  // Pool size this plugin requests.
  optional int32 pool_size = 16;
  // Show help if no args are passed to the plugin command.
  //
  // NOTE: Subcommands count as arguments.
  bool arg_required_else_help = 17;
}
