syntax = "proto3";

import "io/send_message_input.proto";
import "io/send_message_output.proto";
import "io/react_input.proto";
import "io/react_output.proto";
import "io/db_query_input.proto";
import "io/db_query_output.proto";
import "io/cron_input.proto";
import "io/cron_output.proto";
import "io/one_shot_input.proto";
import "io/one_shot_output.proto";
import "io/reload_plugin_input.proto";
import "io/reload_plugin_output.proto";

package hank;

// [Internal] The underlying core Hank service. Should only be used by internal code.
service Hank {
  // [Internal] Send a chat message to Hank.
  rpc send_message(SendMessageInput) returns (SendMessageOutput);
  // [Internal] Send a reaction to Hank.
  rpc react(ReactInput) returns (ReactOutput);
  // [Internal] Send a database query to hank.
  rpc db_query(DbQueryInput) returns (DbQueryOutput);
  // [Internal] Send a cron job to hank.
  rpc cron(CronInput) returns (CronOutput);
  // [Internal] Send a one shot job to hank.
  rpc one_shot(OneShotInput) returns (OneShotOutput);
  // [Internal] Send a reload plugin request to hank.
  //
  // Requires EscalatedPrivilege::RELOAD_PLUGIN
  rpc reload_plugin(ReloadPluginInput) returns (ReloadPluginOutput);
}

// service Plugin {
//   rpc handle_message(HandleMessageInput) returns (HandleMessageOutput);
// 
//   rpc get_metadata(GetMetadataInput) returns (GetMetadataOutput);
// }
